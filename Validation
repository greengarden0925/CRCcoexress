# Version info: R 3.2.3, Biobase 2.30.0, GEOquery 2.40.0, limma 3.26.8
################################################################
#   Data plots for selected GEO samples
library(GEOquery)
library(limma)
library(umap)
library("ggplot2")
library(car)
library(GGally)
# load series and platform data from GEO

gset <- getGEO("GSE117606", GSEMatrix = TRUE, getGPL = FALSE)
if (length(gset) > 1)  idx <- grep("GPL25373", attr(gset, "names")) else  idx <- 1 
gset <- gset[[idx]]

ex <- exprs(gset)
# log2 transform
qx <-
  as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm = T))
LogC <- (qx[5] > 100) ||
  (qx[6] - qx[1] > 50 && qx[2] > 0)
if (LogC) {
  ex[which(ex <= 0)] <- NaN
  ex <- log2(ex)
}

# box-and-whisker plot
dev.new(width = 3 + ncol(gset) / 6, height = 5)
par(mar = c(7, 4, 2, 1))
title <- paste ("GSE117606", "/", annotation(gset), sep = "")
boxplot(
  ex,
  boxwex = 0.7,
  notch = T,
  main = title,
  outline = FALSE,
  las = 2
)
dev.off()

# expression value distribution plot
par(mar = c(4, 4, 2, 1))
title <-
  paste ("GSE117606", "/", annotation(gset), " value distribution", sep =
           "")
plotDensities(ex, main = title, legend = F)

# mean-variance trend
ex <- na.omit(ex) # eliminate rows with NAs
plotSA(lmFit(ex), main = "Mean variance trend, GSE117606")

# UMAP plot (multi-dimensional scaling)
ex <- ex[!duplicated(ex),]  # remove duplicates
ump <- umap(t(ex), n_neighbors = 15, random_state = 123)
plot(
  ump$layout,
  main = "UMAP plot, nbrs=15",
  xlab = "",
  ylab = "",
  pch = 20,
  cex = 1.5
)
library("maptools")  # point labels without overlaps
pointLabel(
  ump$layout,
  labels = rownames(ump$layout),
  method = "SANN",
  cex = 0.6
)

#gene annotation----------------------------------


BiocManager::install("hgu133plus2.db")
library(hgu133plus2.db)
keytypes(hgu133plus2.db)

AnnotationDbi::select(hgu133plus2.db,
                      c("31874_at", "31861_at"),
                      c("SYMBOL", "ENTREZID", "GENENAME"))
#-----------------------------
phe = pData(gset)
dim(phe)
names(phe)

dim(ex)

dt = data.frame(
  AQP8 = ex['343_at', ],
  GUCA2B = ex['2981_at', ],
  SPIB = ex['6689_at', ],
  tissue = phe$`tissue:ch1`,
  stage = phe$`uicc:ch1`,
  age = as.numeric(phe$`age:ch1`),
  phe$`gender:ch1`
)

dt$age.G = car::recode(dt$age, "lo:50='<50';50:74='50-74';75:hi='≥75'")
table(dt$age.G)
dt$age.G = factor(dt$age.G, levels = c('<50', '50-74', '≥75'))
table(dt$age.G)

dt$stage = recode(dt$stage, "'--'=NA")
table(dt$stage)

dt$tissue = factor(dt$tissue,
                   levels = c('Adjacent Mucosa', 'SSA', 'Adenoma', 'Tumor'))



gpplot = function(dt, gene, x, fx = NULL) {
  #gene="SPIB"
  #x="stage"
  #fx="stage"
  
  if (is.null(fx)) {
    ggplot2::ggplot(dt, aes(
      y = get(gene),
      x = get(x),
      color = get(x)
    )) + geom_violin() + geom_boxplot() + labs(y = gene, x = x, color = x)
    
    
  } else{
    fm = formula(paste0("~", fx))
    fm
    # ggplot2::ggplot(dt,aes(y=get(gene),x=tissue,color=tissue))+geom_violin()+geom_boxplot()+labs(y=gene)+
    # facet_grid(fm,labeller = labeller(.rows = label_both, .cols = label_both))
    
    ggplot2::ggplot(dt, aes(
      y = get(gene),
      x = get(x),
      color = get(x)
    )) + geom_violin() + geom_boxplot() + labs(y = gene, x = x, color = x) +
      facet_grid(fm)
  }
  
  
}

gpplot(dt, gene = "AQP8", x = "tissue", fx = "age.G")
gpplot(dt, gene = "AQP8", x = "tissue")
gpplot(dt, gene = "AQP8", x = "stage")


gpplot(dt, gene = "SPIB", x = "tissue", fx = "age.G")
gpplot(dt, gene = "SPIB", x = "tissue")
gpplot(dt, gene = "SPIB", x = "stage")

gpplot(dt, gene = "AQP8", x = "tissue", fx = "age.G")
gpplot(dt, gene = "AQP8", x = "tissue")
gpplot(dt, gene = "AQP8", x = "stage")

#ggpairs----------------------------------------
library(devtools)
install_github("ggobi/ggally")
library(GGally)
ggpairs(dt[, 1:3])
